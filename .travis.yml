language: bash
os: osx
osx_image: xcode10.1
addons:
  homebrew:
    taps:
      - cartr/qt4
      - rafaelgarrido/homebrew-caveats
    packages:
      # Global Dependencies
      - git
      - cmake
      - boost
      - cppunit
      - log4cpp
      # Python Wrappers
      - python@2
      - swig
      # docs
      - doxygen
      # grc
      - pygtk
      # gr-fft
      - fftw
      # gr-zeromq
      - zeromq
      # cppzmq (>= git 6c17af2) https://github.com/zeromq/cppzmq
      # gr-wavelet
      - gsl
      # gr-qtgui
      - qt@4
      - qwt
      # pyqt (>= 4.10.0) http://www.riverbankcomputing.co.uk/software/pyqt/download

      # uhd
      - uhd
      # gr-fcd
      - libusb
      # gr-video-sdl
      - sdl
      # gr-comedi
      # comedilib (>= 0.8.1) http://www.comedi.org/
      - thrift

      # Lime Suite
      - sqlite
      - wxWidgets

      # gr-osmosdr
      #- gr-osmosdr

      #- airspy
      #- atk
      #- bison
      #- gdk-pixbuf
      #- gnu-tar
      #- gtk+
      #- hackrf
      #- libbladerf
      #- librsvg
      #- librtlsdr
      #- orc
      #- pygobject
      #- sip
      #- zmq
      #- zmqpp

      - brew-caveats
      - tree
before_cache:
  - brew cleanup
cache:
  directories:
    - /usr/local/Homebrew
    - $HOME/Library/Caches/Homebrew
    - $HOME/Library/Caches/pip
#before_install:
  #- brew upgrade
install:
# gnuradio gr-osmosdr hackrf libbladerf airspy librsvg
# SoapySDR LimeSuite osmo-sdr libmirisdr
# pygobject-introspection
  - pip2 install --upgrade pip setuptools
  - pip2 install --user virtualenv
  - |
    : spawn venv
    "$(python -m site --user-base)/bin/virtualenv" -p /usr/bin/python2.7 venv
  - |
    : spawn sphinx-env
    "$(python -m site --user-base)/bin/virtualenv" -p /usr/bin/python2.7 sphinx-env
  #- |
  #  PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig:$PKG_CONFIG_PATH" \
  #  ./venv/bin/pip install pycairo
  #- ./venv/bin/pip install CairoSVG==1.0.22

  # Global Dependencies (Volk)
  - ./venv/bin/pip install Mako six
  - ./sphinx-env/bin/pip install Sphinx
  # Python Wrappers
  - ./venv/bin/pip install numpy
  # grc
  - ./venv/bin/pip install Cheetah
  # gr-wxgui
  - ./venv/bin/pip install lxml wxPython
# https://github.com/barak/f2c
# https://packages.gentoo.org/packages/dev-libs/libf2c
# libf2c blas cblas
before_script:
  - mkdir src
  - git clone --recurse-submodules --depth 1 --branch v3.7.13.5        https://github.com/gnuradio/gnuradio.git    src/gnuradio
  #- rm -R -f gnuradio/volk
  #- git clone --depth 1 --branch v1.3.1           https://github.com/gnuradio/volk.git        src/gnuradio/volk
  - git clone --recurse-submodules --depth 1 --branch master           https://github.com/osmocom/gr-osmosdr.git   src/gnuradio/gr-osmosdr
  # Lime Suite
  - git clone --recurse-submodules --depth 1 --branch soapy-sdr-0.7.1  https://github.com/pothosware/SoapySDR.git  src/soapysdr
  - |
    : setup cmake
    res_dir="/Applications/GNURadio.app/Contents/Resources"
    opts=""
    opts="'-DCMAKE_C_FLAGS=-framework Python' $opts"
    opts="'-DCMAKE_CXX_FLAGS=-framework Python' $opts"
    opts="-DPYTHON_EXECUTABLE=$HOME/venv/bin/python $opts"
    opts="-DSPHINX_EXECUTABLE=$HOME/sphinx-env/bin/rst2html-2.7.py $opts"
    opts="-DCMAKE_INSTALL_PREFIX=$res_dir/root $opts"
    opts="-DGR_PYTHON_DIR=$res_dir/venv/lib/python2.7/site-packages $opts"

    GNURADIO_CMAKE_OPTS="$opts"
    export GNURADIO_CMAKE_OPTS
  - |
    : setup env
    # coreutils
    #PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

    # expat
    #PATH="/usr/local/opt/expat/bin:$PATH"
    LDFLAGS="-L/usr/local/opt/expat/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/expat/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/expat/lib/pkgconfig:$PKG_CONFIG_PATH"

    # gettext
    #PATH="/usr/local/opt/gettext/bin:$PATH"
    LDFLAGS="-L/usr/local/opt/gettext/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/gettext/include $CPPFLAGS"

    # icu4c
    #PATH="/usr/local/opt/icu4c/bin:$PATH"
    #PATH="/usr/local/opt/icu4c/sbin:$PATH"
    LDFLAGS="-L/usr/local/opt/icu4c/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/icu4c/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/icu4c/lib/pkgconfig:$PKG_CONFIG_PATH"

    # libffi
    LDFLAGS="-L/usr/local/opt/libffi/lib $LDFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig:$PKG_CONFIG_PATH"

    # libpq
    #PATH="/usr/local/opt/libpq/bin:$PATH"
    LDFLAGS="-L/usr/local/opt/libpq/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/libpq/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/libpq/lib/pkgconfig:$PKG_CONFIG_PATH"

    # libxml2
    #PATH="/usr/local/opt/libxml2/bin:$PATH"
    LDFLAGS="-L/usr/local/opt/libxml2/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/libxml2/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/libxml2/lib/pkgconfig:$PKG_CONFIG_PATH"

    # nss
    #PATH="/usr/local/opt/nss/bin:$PATH"
    LDFLAGS="-L/usr/local/opt/nss/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/nss/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/nss/lib/pkgconfig:$PKG_CONFIG_PATH"

    # openblas
    LDFLAGS="-L/usr/local/opt/openblas/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/openblas/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/openblas/lib/pkgconfig:$PKG_CONFIG_PATH"

    # openssl
    #PATH="/usr/local/opt/openssl/bin:$PATH"
    LDFLAGS="-L/usr/local/opt/openssl/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/openssl/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig:$PKG_CONFIG_PATH"

    # qt
    #PATH="/usr/local/opt/qt/bin:$PATH"
    LDFLAGS="-L/usr/local/opt/qt/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/qt/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/qt/lib/pkgconfig:$PKG_CONFIG_PATH"

    # readline
    LDFLAGS="-L/usr/local/opt/readline/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/readline/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/readline/lib/pkgconfig:$PKG_CONFIG_PATH"

    # sqlite
    #PATH="/usr/local/opt/sqlite/bin:$PATH"
    LDFLAGS="-L/usr/local/opt/sqlite/lib $LDFLAGS"
    CPPFLAGS="-I/usr/local/opt/sqlite/include $CPPFLAGS"
    PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig:$PKG_CONFIG_PATH"

    export LDFLAGS CPPFLAGS PKG_CONFIG_PATH
  - brew doctor --verbose || true
  - brew list
  - brew caveats $(brew list)
  - softwareupdate --list
  - ./venv/bin/pip list
  - ./sphinx-env/bin/pip list
  #- source venv/bin/activate
  - env | sort | column -t -s '='
  - find -L /usr/local/opt -type d -name lib ! -depth 2 ! -path '*/npm/*' ! -path '*/node*/*'
  - find -L /usr/local/opt -type d -name include ! -depth 2 ! -path '*/npm/*' ! -path '*/node*/*'
  - find -L /usr/local/opt -type d -name lib -depth 2 | sed 's/^/-L/' | paste -s -d \  - | sed 's/^/LDFLAGS="/;s/$/"/'
  - find -L /usr/local/opt -type d -name include -depth 2 | sed 's/^/-I/' | paste -s -d \  - | sed 's/^/CPPFLAGS="/;s/$/"/'
  - find -L /usr/local/opt -type d -name pkgconfig -depth 3 | paste -s -d ':' - | sed 's/^/PKG_CONFIG_PATH="/;s/$/"/'
  - mkdir -p "/Applications/GNURadio.app/Contents/MacOS"
  - mkdir -p "/Applications/GNURadio.app/Contents/Resources/root"
script:
  - mkdir -p build/gnuradio
  - cd build/gnuradio
  # https://www.gnuradio.org/doc/doxygen/build_guide.html#build_gr_cmake
  - echo "cmake $GNURADIO_CMAKE_OPTS ../../src/gnuradio"
  - "cmake $GNURADIO_CMAKE_OPTS ../../src/gnuradio"
  #- make
  #- make test
  #- bash -x build.sh
